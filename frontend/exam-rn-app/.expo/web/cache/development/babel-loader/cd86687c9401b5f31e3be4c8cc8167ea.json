{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/pul/Projects/SRS-II-Exam-PaulAndrewGravoso/frontend/exam-rn-app/App.js\";\nimport React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { NavigationContainer, DrawerActions, getFocusedRouteNameFromRoute } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport AuthScreen from \"./components/2_AuthScreen/AuthScreen\";\nimport HomeScreen from \"./components/1_HomeScreen/HomeScreen\";\nvar ScreenStack = createStackNavigator();\nexport default function App() {\n  var _this = this;\n\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isAuthenticated = _React$useState2[0],\n      setIsAuthenticated = _React$useState2[1];\n\n  var handleSignIn = function handleSignIn() {\n    pass;\n  };\n\n  var handleSignOut = function handleSignOut() {\n    pass;\n  };\n\n  var handleSignUp = function handleSignUp() {\n    setIsAuthenticated(false);\n  };\n\n  return React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, React.createElement(ScreenStack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, isAuthenticated ? React.createElement(React.Fragment, null, React.createElement(ScreenStack.Screen, {\n    name: \"Home\",\n    component: HomeScreen,\n    options: function options(_ref) {\n      var route = _ref.route,\n          navigation = _ref.navigation;\n      return {\n        headerTitle: getFocusedRouteNameFromRoute(route),\n        headerLeft: function headerLeft() {\n          return React.createElement(Button, {\n            onPress: function onPress() {\n              return navigation.dispatch(DrawerActions.toggleDrawer());\n            },\n            title: \"Menu\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 17\n            }\n          });\n        },\n        headerRight: function headerRight() {\n          return React.createElement(Button, {\n            onPress: handleSignOut,\n            title: \"Sign Out\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 17\n            }\n          });\n        }\n      };\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  })) : React.createElement(React.Fragment, null, React.createElement(ScreenStack.Screen, {\n    name: \"Auth\",\n    component: AuthScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }))));\n}","map":{"version":3,"sources":["/home/pul/Projects/SRS-II-Exam-PaulAndrewGravoso/frontend/exam-rn-app/App.js"],"names":["React","useState","NavigationContainer","DrawerActions","getFocusedRouteNameFromRoute","createStackNavigator","AuthScreen","HomeScreen","ScreenStack","App","isAuthenticated","setIsAuthenticated","handleSignIn","pass","handleSignOut","handleSignUp","route","navigation","headerTitle","headerLeft","dispatch","toggleDrawer","headerRight"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,SAASC,mBAAT,EAA8BC,aAA9B,EAA6CC,4BAA7C,QAAkF,0BAAlF;AACA,SAASC,oBAAT,QAAqC,yBAArC;AAEA,OAAOC,UAAP;AACA,OAAOC,UAAP;AAEA,IAAMC,WAAW,GAAGH,oBAAoB,EAAxC;AAGA,eAAe,SAASI,GAAT,GAAe;AAAA;;AAAA,wBAEkBT,KAAK,CAACC,QAAN,CAAe,IAAf,CAFlB;AAAA;AAAA,MAErBS,eAFqB;AAAA,MAEJC,kBAFI;;AAI5B,MAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AAAEC,IAAAA,IAAI;AAAE,GAAnC;;AAEA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAAED,IAAAA,IAAI;AAAE,GAApC;;AAEA,MAAME,YAAY,GAAG,SAAfA,YAAe,GAAM;AAGzBJ,IAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACD,GAJD;;AAMA,SACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD,CAAa,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,eAAe,GAEZ,0CACA,oBAAC,WAAD,CAAa,MAAb;AAAoB,IAAA,IAAI,EAAC,MAAzB;AAAgC,IAAA,SAAS,EAAEH,UAA3C;AACA,IAAA,OAAO,EAAE;AAAA,UAAGS,KAAH,QAAGA,KAAH;AAAA,UAAUC,UAAV,QAAUA,UAAV;AAAA,aAA4B;AACnCC,QAAAA,WAAW,EAAEd,4BAA4B,CAACY,KAAD,CADN;AAEnCG,QAAAA,UAAU,EAAE;AAAA,iBACV,oBAAC,MAAD;AACE,YAAA,OAAO,EAAE;AAAA,qBACPF,UAAU,CAACG,QAAX,CAAoBjB,aAAa,CAACkB,YAAd,EAApB,CADO;AAAA,aADX;AAIE,YAAA,KAAK,EAAC,MAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADU;AAAA,SAFuB;AAUnCC,QAAAA,WAAW,EAAE;AAAA,iBACX,oBAAC,MAAD;AAAQ,YAAA,OAAO,EAAER,aAAjB;AAAgC,YAAA,KAAK,EAAC,UAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADW;AAAA;AAVsB,OAA5B;AAAA,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CAFY,GAoBZ,0CACA,oBAAC,WAAD,CAAa,MAAb;AAAoB,IAAA,IAAI,EAAC,MAAzB;AAAgC,IAAA,SAAS,EAAER,UAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CArBN,CADF,CADF;AA+BD","sourcesContent":["import React, { useState } from 'react';\nimport { Text, View } from 'react-native';\nimport { NavigationContainer, DrawerActions, getFocusedRouteNameFromRoute, } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\n\nimport AuthScreen from './components/2_AuthScreen/AuthScreen';\nimport HomeScreen from './components/1_HomeScreen/HomeScreen';\n\nconst ScreenStack = createStackNavigator();\n/*const Tab = createBottomTabNavigator();*/\n\nexport default function App() {\n\n  const [isAuthenticated, setIsAuthenticated] = React.useState(true);\n  \n  const handleSignIn = () => { pass };\n\n  const handleSignOut = () => { pass };\n \n  const handleSignUp = () => {\n    // TODO implement real sign up mechanism\n \n    setIsAuthenticated(false);\n  };\n\n  return (\n    <NavigationContainer>\n      <ScreenStack.Navigator>\n        {isAuthenticated ? \n          (\n            <>\n            <ScreenStack.Screen name=\"Home\" component={HomeScreen}\n            options={({ route, navigation }) => ({\n              headerTitle: getFocusedRouteNameFromRoute(route),\n              headerLeft: () => (\n                <Button\n                  onPress={() =>\n                    navigation.dispatch(DrawerActions.toggleDrawer())\n                  }\n                  title=\"Menu\"\n                />\n              ),\n              headerRight: () => (\n                <Button onPress={handleSignOut} title=\"Sign Out\" />\n              ),\n            })} />\n            </>\n          ):(\n            <>\n            <ScreenStack.Screen name=\"Auth\" component={AuthScreen} />\n            </>\n          )\n        }\n      </ScreenStack.Navigator>\n    </NavigationContainer>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}