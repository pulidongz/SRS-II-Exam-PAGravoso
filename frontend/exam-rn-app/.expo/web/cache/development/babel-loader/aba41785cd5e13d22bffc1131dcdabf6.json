{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/pul/Projects/SRS-II-Exam-PaulAndrewGravoso/frontend/exam-rn-app/components/2_AuthScreen/Login.js\";\nimport React, { useState, useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport AuthContext from \"../constants/AuthContext\";\nexport default function Login(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setUsername = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _React$useContext = React.useContext(AuthContext),\n      signIn = _React$useContext.signIn;\n\n  var login = function login(event) {\n    return _regeneratorRuntime.async(function login$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch('http://localhost:5000/api/login', {\n              method: 'POST',\n              headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                username: username,\n                password: password\n              })\n            }).then(function (response) {\n              console.log(response.status);\n\n              if (response.status == 200) {\n                console.log(\"go to Home!\");\n                navigation.navigate('Home');\n              }\n            }).catch(function (error) {\n              console.log(error);\n            }));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, \"Login\"), React.createElement(TextInput, {\n    placeholder: \"Username\",\n    value: username,\n    onChangeText: setUsername,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    placeholder: \"Password\",\n    value: password,\n    onChangeText: setPassword,\n    secureTextEntry: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    title: \"Login\",\n    onPress: function onPress() {\n      return signIn({\n        username: username,\n        password: password\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/home/pul/Projects/SRS-II-Exam-PaulAndrewGravoso/frontend/exam-rn-app/components/2_AuthScreen/Login.js"],"names":["React","useState","useEffect","AuthContext","Login","navigation","username","setUsername","password","setPassword","useContext","signIn","login","event","fetch","method","headers","Accept","body","JSON","stringify","then","response","console","log","status","navigate","catch","error","flex","alignItems","justifyContent"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;AAEA,OAAOC,WAAP;AAGA,eAAe,SAASC,KAAT,OAA+B;AAAA,MAAdC,UAAc,QAAdA,UAAc;;AAAA,kBAEbJ,QAAQ,CAAC,EAAD,CAFK;AAAA;AAAA,MAEtCK,QAFsC;AAAA,MAE5BC,WAF4B;;AAAA,mBAGbN,QAAQ,CAAC,EAAD,CAHK;AAAA;AAAA,MAGtCO,QAHsC;AAAA,MAG5BC,WAH4B;;AAAA,0BAKzBT,KAAK,CAACU,UAAN,CAAiBP,WAAjB,CALyB;AAAA,MAKpCQ,MALoC,qBAKpCA,MALoC;;AAO5C,MAAMC,KAAK,GAAG,SAARA,KAAQ,CAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAENC,KAAK,CAAC,iCAAD,EACV;AACCC,cAAAA,MAAM,EAAE,MADT;AAEAC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,MAAM,EAAE,kBADD;AAEP,gCAAgB;AAFT,eAFT;AAMCC,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACpBd,gBAAAA,QAAQ,EAAEA,QADU;AAEpBE,gBAAAA,QAAQ,EAAEA;AAFU,eAAf;AANP,aADU,CAAL,CAaLa,IAbK,CAaA,UAAAC,QAAQ,EAAI;AAChBC,cAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,MAArB;;AACA,kBAAIH,QAAQ,CAACG,MAAT,IAAmB,GAAvB,EAA4B;AAC3BF,gBAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACCnB,gBAAAA,UAAU,CAACqB,QAAX,CAAoB,MAApB;AACD;AACF,aAnBK,EAoBLC,KApBK,CAoBC,UAAUC,KAAV,EAAiB;AACtBL,cAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACD,aAtBK,CAFM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAd;;AA2BA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,UAAU,EAAE,QAAvB;AAAiCC,MAAAA,cAAc,EAAE;AAAjD,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE,oBAAC,SAAD;AACE,IAAA,WAAW,EAAC,UADd;AAEE,IAAA,KAAK,EAAEzB,QAFT;AAGE,IAAA,YAAY,EAAEC,WAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAOE,oBAAC,SAAD;AACE,IAAA,WAAW,EAAC,UADd;AAEE,IAAA,KAAK,EAAEC,QAFT;AAGE,IAAA,YAAY,EAAEC,WAHhB;AAIE,IAAA,eAAe,MAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAaE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,OAAd;AAAsB,IAAA,OAAO,EAAE;AAAA,aAAME,MAAM,CAAC;AAAEL,QAAAA,QAAQ,EAARA,QAAF;AAAYE,QAAAA,QAAQ,EAARA;AAAZ,OAAD,CAAZ;AAAA,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,CADF;AAiBD","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Text, View, Button, TextInput } from 'react-native';\r\nimport AuthContext from '../constants/AuthContext';\r\n\r\n\r\nexport default function Login({ navigation }) {\r\n\r\n\tconst [username, setUsername] = useState(\"\");\r\n\tconst [password, setPassword] = useState(\"\");\r\n\r\n  const { signIn } = React.useContext(AuthContext);\r\n\r\n  const login = async (event) => {\r\n\r\n    await fetch('http://localhost:5000/api/login',\r\n    \t{\r\n    \t\tmethod: 'POST',\r\n\t\t  \theaders: {\r\n\t\t    \tAccept: 'application/json',\r\n\t\t    \t'Content-Type': 'application/json'\r\n    \t\t},\r\n\t    \tbody: JSON.stringify({\r\n\t\t  \t  username: username,\r\n\t\t  \t  password: password\r\n\t  \t\t})\r\n\t  \t}\r\n\t  )\r\n    .then(response => {\r\n      console.log(response.status);\r\n      if (response.status == 200) {\r\n      \tconsole.log(\"go to Home!\");\r\n        navigation.navigate('Home')\r\n      }\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n    })\r\n  };\r\n\r\n  return (\r\n    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\r\n      <Text>Login</Text>\r\n      <TextInput\r\n        placeholder=\"Username\"\r\n        value={username}\r\n        onChangeText={setUsername}\r\n      />\r\n      <TextInput\r\n        placeholder=\"Password\"\r\n        value={password}\r\n        onChangeText={setPassword}\r\n        secureTextEntry\r\n      />\r\n      <Button title=\"Login\" onPress={() => signIn({ username, password })} />\r\n    </View>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}