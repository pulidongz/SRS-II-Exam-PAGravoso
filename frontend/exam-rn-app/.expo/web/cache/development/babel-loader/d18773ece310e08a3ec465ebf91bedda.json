{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/pul/Projects/SRS-II-Exam-PaulAndrewGravoso/frontend/exam-rn-app/App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { NavigationContainer, DrawerActions, getFocusedRouteNameFromRoute } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport AuthScreen from \"./components/2_AuthScreen/AuthScreen\";\nimport HomeScreen from \"./components/1_HomeScreen/HomeScreen\";\nvar AuthContext = React.createContext();\nvar ScreenStack = createStackNavigator();\nexport default function App() {\n  var _this = this;\n\n  var _React$useReducer = React.useReducer(function (prevState, action) {\n    switch (action.type) {\n      case 'SIGN_IN':\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          isSignout: false\n        });\n\n      case 'SIGN_OUT':\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          isSignout: true\n        });\n    }\n  }, {\n    isSignout: false\n  }),\n      _React$useReducer2 = _slicedToArray(_React$useReducer, 2),\n      state = _React$useReducer2[0],\n      dispatch = _React$useReducer2[1];\n\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isAuthenticated = _React$useState2[0],\n      setIsAuthenticated = _React$useState2[1];\n\n  var handleSignIn = function handleSignIn() {\n    pass;\n  };\n\n  var handleSignOut = function handleSignOut() {\n    pass;\n  };\n\n  var handleSignUp = function handleSignUp() {\n    setIsAuthenticated(false);\n  };\n\n  return React.createElement(AuthContext.Provider, {\n    value: authContext,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, React.createElement(ScreenStack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, isAuthenticated ? React.createElement(React.Fragment, null, React.createElement(ScreenStack.Screen, {\n    name: \"Home\",\n    component: HomeScreen,\n    options: function options(_ref) {\n      var route = _ref.route,\n          navigation = _ref.navigation;\n      return {\n        headerTitle: getFocusedRouteNameFromRoute(route),\n        headerRight: function headerRight() {\n          return React.createElement(Button, {\n            onPress: handleSignOut,\n            title: \"Sign Out\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 19\n            }\n          });\n        }\n      };\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  })) : React.createElement(React.Fragment, null, React.createElement(ScreenStack.Screen, {\n    name: \"Auth\",\n    component: AuthScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  })))));\n}","map":{"version":3,"sources":["/home/pul/Projects/SRS-II-Exam-PaulAndrewGravoso/frontend/exam-rn-app/App.js"],"names":["React","NavigationContainer","DrawerActions","getFocusedRouteNameFromRoute","createStackNavigator","AuthScreen","HomeScreen","AuthContext","createContext","ScreenStack","App","useReducer","prevState","action","type","isSignout","state","dispatch","useState","isAuthenticated","setIsAuthenticated","handleSignIn","pass","handleSignOut","handleSignUp","authContext","route","navigation","headerTitle","headerRight"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,SAASC,mBAAT,EAA8BC,aAA9B,EAA6CC,4BAA7C,QAAkF,0BAAlF;AACA,SAASC,oBAAT,QAAqC,yBAArC;AAEA,OAAOC,UAAP;AACA,OAAOC,UAAP;AAEA,IAAMC,WAAW,GAAGP,KAAK,CAACQ,aAAN,EAApB;AACA,IAAMC,WAAW,GAAGL,oBAAoB,EAAxC;AAEA,eAAe,SAASM,GAAT,GAAe;AAAA;;AAAA,0BAEFV,KAAK,CAACW,UAAN,CACxB,UAACC,SAAD,EAAYC,MAAZ,EAAuB;AACrB,YAAQA,MAAM,CAACC,IAAf;AACE,WAAK,SAAL;AACE,+CACKF,SADL;AAEEG,UAAAA,SAAS,EAAE;AAFb;;AAIF,WAAK,UAAL;AACE,+CACKH,SADL;AAEEG,UAAAA,SAAS,EAAE;AAFb;AAPJ;AAYD,GAduB,EAexB;AACEA,IAAAA,SAAS,EAAE;AADb,GAfwB,CAFE;AAAA;AAAA,MAErBC,KAFqB;AAAA,MAEdC,QAFc;;AAAA,wBAsBkBjB,KAAK,CAACkB,QAAN,CAAe,IAAf,CAtBlB;AAAA;AAAA,MAsBrBC,eAtBqB;AAAA,MAsBJC,kBAtBI;;AAwB5B,MAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AAAEC,IAAAA,IAAI;AAAE,GAAnC;;AAEA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAAED,IAAAA,IAAI;AAAE,GAApC;;AAEA,MAAME,YAAY,GAAG,SAAfA,YAAe,GAAM;AAGzBJ,IAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACD,GAJD;;AAMA,SACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEK,WAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD,CAAa,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,eAAe,GAEZ,0CACA,oBAAC,WAAD,CAAa,MAAb;AAAoB,IAAA,IAAI,EAAC,MAAzB;AAAgC,IAAA,SAAS,EAAEb,UAA3C;AACA,IAAA,OAAO,EAAE;AAAA,UAAGoB,KAAH,QAAGA,KAAH;AAAA,UAAUC,UAAV,QAAUA,UAAV;AAAA,aAA4B;AACnCC,QAAAA,WAAW,EAAEzB,4BAA4B,CAACuB,KAAD,CADN;AAEnCG,QAAAA,WAAW,EAAE;AAAA,iBACX,oBAAC,MAAD;AAAQ,YAAA,OAAO,EAAEN,aAAjB;AAAgC,YAAA,KAAK,EAAC,UAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADW;AAAA;AAFsB,OAA5B;AAAA,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CAFY,GAYZ,0CACA,oBAAC,WAAD,CAAa,MAAb;AAAoB,IAAA,IAAI,EAAC,MAAzB;AAAgC,IAAA,SAAS,EAAElB,UAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CAbN,CADF,CADF,CADF;AAyBD","sourcesContent":["import React from 'react';\nimport { Text, View, Button } from 'react-native';\nimport { NavigationContainer, DrawerActions, getFocusedRouteNameFromRoute, } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\n\nimport AuthScreen from './components/2_AuthScreen/AuthScreen';\nimport HomeScreen from './components/1_HomeScreen/HomeScreen';\n\nconst AuthContext = React.createContext();\nconst ScreenStack = createStackNavigator();\n\nexport default function App() {\n\n  const [state, dispatch] = React.useReducer(\n    (prevState, action) => {\n      switch (action.type) {\n        case 'SIGN_IN':\n          return {\n            ...prevState,\n            isSignout: false,\n          };\n        case 'SIGN_OUT':\n          return {\n            ...prevState,\n            isSignout: true,\n          };\n      }\n    },\n    {\n      isSignout: false,\n    }\n  );\n\n  const [isAuthenticated, setIsAuthenticated] = React.useState(true);\n  \n  const handleSignIn = () => { pass };\n\n  const handleSignOut = () => { pass };\n \n  const handleSignUp = () => {\n    // TODO implement real sign up mechanism\n \n    setIsAuthenticated(false);\n  };\n\n  return (\n    <AuthContext.Provider value={authContext}>\n      <NavigationContainer>\n        <ScreenStack.Navigator>\n          {isAuthenticated ? \n            (\n              <>\n              <ScreenStack.Screen name=\"Home\" component={HomeScreen}\n              options={({ route, navigation }) => ({\n                headerTitle: getFocusedRouteNameFromRoute(route),\n                headerRight: () => (\n                  <Button onPress={handleSignOut} title=\"Sign Out\" />\n                ),\n              })} />\n              </>\n            ):(\n              <>\n              <ScreenStack.Screen name=\"Auth\" component={AuthScreen} />\n              </>\n            )\n          }\n        </ScreenStack.Navigator>\n      </NavigationContainer>\n    </AuthContext.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}